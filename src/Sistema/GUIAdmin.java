/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUIAdmin.java
 *
 * Created on 10/10/2010, 09:02:54 PM
 */
package Sistema;

import ClassesBase.Livro;
import ClassesBase.Usuario;
import ClassePrincipal.Biblioteca;
import java.awt.Desktop;
import java.io.*;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Paul
 */
public class GUIAdmin extends javax.swing.JFrame {

    Biblioteca B;

    /** Creates new form GUIAdmin */
    public GUIAdmin() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("icone.png")).getImage());
        setLocationRelativeTo(null);
        enviarFichero();
        atualizarFecha();
        atualizarLivros();
        atualizarUsuarios();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        numeroLibros = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        numeroUsuarios = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaLibros = new javax.swing.JTable();
        ordenarCodigo = new javax.swing.JButton();
        ordenarTitulo = new javax.swing.JButton();
        ordenarAutor = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        fecha = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Biblioteca");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField1.setText("Bem-Vindo Adm");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Extras:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel1.setText("Quantidade de Livros");

        numeroLibros.setEditable(false);

        jLabel2.setText("Quantidade de usuarios");

        numeroUsuarios.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numeroUsuarios)
                    .addComponent(numeroLibros, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numeroLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(numeroUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registros de la Biblioteca:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tablaLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Título", "Autor", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaLibros);
        if (tablaLibros.getColumnModel().getColumnCount() > 0) {
            tablaLibros.getColumnModel().getColumn(0).setPreferredWidth(2);
            tablaLibros.getColumnModel().getColumn(3).setPreferredWidth(4);
        }

        ordenarCodigo.setText("Ordenar por código");
        ordenarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarCodigoActionPerformed(evt);
            }
        });

        ordenarTitulo.setText("Ordenar por título");
        ordenarTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarTituloActionPerformed(evt);
            }
        });

        ordenarAutor.setText("Ordenar por autor");
        ordenarAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarAutorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ordenarCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ordenarTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ordenarAutor)
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(321, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ordenarCodigo)
                    .addComponent(ordenarAutor)
                    .addComponent(ordenarTitulo))
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(45, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Livros", jPanel4);

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "DN", "Livro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);
        if (tablaUsuarios.getColumnModel().getColumnCount() > 0) {
            tablaUsuarios.getColumnModel().getColumn(0).setPreferredWidth(3);
            tablaUsuarios.getColumnModel().getColumn(2).setPreferredWidth(3);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("Usuarios", jPanel3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        fecha.setEditable(false);
        fecha.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        fecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaActionPerformed(evt);
            }
        });

        jMenu1.setText("Arquivo");

        jMenuItem1.setText("Novo Livro");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Editar Livro");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Apagar Livro");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Buscar");

        jMenuItem6.setText("Buscar Livro por Codigo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Buscar Livro por Titulo");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("Buscar Livro por Autor");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Ajuda");

        jMenuItem9.setText("Manual de Usuario");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuItem10.setText("Visitanos");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenuItem11.setText("Sobre ...");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem11);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        String c = JOptionPane.showInputDialog("Iserir codigo do livro");

        if (B.buscarLivroCodigo(c) != -1)//encontra livro com o código
        {
            JOptionPane.showMessageDialog(null, "Livro com esse código já existe", "Mensaje", JOptionPane.ERROR_MESSAGE);

        } else {
            String t = JOptionPane.showInputDialog("Insira título do livro");
            String a = JOptionPane.showInputDialog("insira autor do livro");
            Livro l = new Livro(c, t, a);
            B.inserirLivro(l);
            atualizarLivros();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        if (B.quantidadeLivros()!= 0) {
            String c = JOptionPane.showInputDialog("Insira código do livro para editar: ");
            int pos;
            if ((pos = B.buscarLivroCodigo(c)) != -1)//encontrou livro com esse codigo
            {
                if (B.livro(pos).disponibilidade()) {
                    B.editarLivro(c);
                    atualizarLivros();
                } else {
                    JOptionPane.showMessageDialog(null, "O Livro está ocupado", "Mensaje", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Livro não encontrado", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Não há livros registrados", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        if (B.quantidadeLivros()!= 0) {
            String c = JOptionPane.showInputDialog("insira código do livro que quer excluir: ");
            int pos;
            if ((pos = B.buscarLivroCodigo(c)) != -1)//encontrou livro com esse codigo
            {
                if (B.livro(pos).disponibilidade()) {
                    B.eliminarLibro(c);
                    atualizarLivros();
                } else {
                    JOptionPane.showMessageDialog(null, "O Livro está ocupado", "Mensaje", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Livro não encontrado", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Não há livros cadastrados", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        if (B.quantidadeLivros()!= 0) {
            String c = JOptionPane.showInputDialog("insira código do livro ");
            int pos = B.buscarLivroCodigo(c);
            if (pos != -1)//encontro livro
            {
                JOptionPane.showMessageDialog(null, B.livro(pos), "Libro Encontrado: ", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "Livro não encontrado", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "não há livros cadastrados", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        if (B.quantidadeLivros()!= 0) {
            String t = JOptionPane.showInputDialog("Insira Titulo do Livro ");
            int pos = B.buscarLivroTitulo(t);
            if (pos != -1)//encontro livro
            {
                JOptionPane.showMessageDialog(null, B.livro(pos), "Livro Encontrado: ", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "Livro não encontrado", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No há livros cadastrados", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        if (B.quantidadeLivros()!= 0) {
            String a = JOptionPane.showInputDialog("Insira Autor do Livro ");
            int pos = B.buscarLivroAutor(a);
            if (pos != -1)//encontrou livro
            {
                JOptionPane.showMessageDialog(null, B.livro(pos), "Livro Encontrado: ", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "Livro não encontrado", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Não há livros cadastrados", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        guardarFichero();
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        try {
            Desktop desktop = null;
            if (Desktop.isDesktopSupported()) {
                desktop = Desktop.getDesktop();
            }
            if (desktop != null) {
                desktop.open(new File("Informe.doc"));
            }
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        try {
            Desktop desktop = null;
            if (Desktop.isDesktopSupported()) {
                desktop = Desktop.getDesktop();
            }
            if (desktop != null) {
                desktop.browse(new URI("http://download-llnw.oracle.com/javase/6/docs/api/index.html"));
            }
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        } catch (URISyntaxException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void ordenarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarCodigoActionPerformed
        // TODO add your handling code here:
        vaciarTablaLibros();
        Livro l[] = new Livro[B.quantidadeLivros()];

        for (int i = 0; i < l.length; i++) {
            l[i] = B.livro(i);
        }
        //ordenamos por método 
        for (int i = 0; i < l.length - 1; i++) {
            for (int j = 0; j < l.length - i - 1; j++) {
                if (Integer.parseInt(l[j].getIdLivro()) > Integer.parseInt(l[j + 1].getIdLivro())) {
                    Livro aux = l[j];
                    l[j] = l[j + 1];
                    l[j + 1] = aux;
                }
            }
        }
        for (int i = 0; i < l.length; i++) {
            Object[] fila = {l[i].getIdLivro(), l[i].getTituloLivro(), l[i].getAutorLivro(), (l[i].disponibilidade()) ? "Disponivel" : "Ocupado"};
            ((DefaultTableModel) tablaLibros.getModel()).addRow(fila);
        }
    }//GEN-LAST:event_ordenarCodigoActionPerformed

    private void ordenarTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarTituloActionPerformed
        // TODO add your handling code here:
        vaciarTablaLibros();
        Livro l[] = new Livro[B.quantidadeLivros()];

        for (int i = 0; i < l.length; i++) {
            l[i] = B.livro(i);
        }
        //ordenamos por metodo de seleção
        int j, k;
        Livro temp;
        for (int i = 0; i < l.length - 1; i++) {
            k = i;
            temp = l[i];
            for (j = i + 1; j < l.length; j++) {
                if (l[j].getTituloLivro().compareToIgnoreCase(temp.getTituloLivro()) < 0) {
                    k = j;
                    temp = l[j];
                }
            }
            l[k] = l[i];
            l[i] = temp;
        }
        for (int i = 0; i < l.length; i++) {
            Object[] fila = {l[i].getIdLivro(), l[i].getTituloLivro(), l[i].getAutorLivro(), (l[i].disponibilidade()) ? "Disponivel" : "Ocupado"};
            ((DefaultTableModel) tablaLibros.getModel()).addRow(fila);
        }
    }//GEN-LAST:event_ordenarTituloActionPerformed

    private void ordenarAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarAutorActionPerformed
        // TODO add your handling code here:
        vaciarTablaLibros();
        Livro l[] = new Livro[B.quantidadeLivros()];

        for (int i = 0; i < l.length; i++) {
            l[i] = B.livro(i);
        }
        //ordenamos por metodo de inserção
        int j;
        Livro lib;
        for (int i = 1; i < l.length; i++) {
            lib = l[i];
            j = i - 1;
            while (j >= 0 && l[j].getAutorLivro().compareToIgnoreCase(lib.getAutorLivro()) > 0) {
                l[j + 1] = l[j];
                j--;
            }
            l[j + 1] = lib;
        }
        for (int i = 0; i < l.length; i++) {
            Object[] fila = {l[i].getIdLivro(), l[i].getTituloLivro(), l[i].getAutorLivro(), (l[i].disponibilidade()) ? "Disponivel" : "Ocupado"};
            ((DefaultTableModel) tablaLibros.getModel()).addRow(fila);
        }
    }//GEN-LAST:event_ordenarAutorActionPerformed

    private void fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void atualizarFecha() {
        SimpleDateFormat formateador = new SimpleDateFormat("EEEEEEEEE ', ' dd 'de' MMMMM 'de' yyyy");
        fecha.setText(formateador.format(new Date()));
    }

    private void atualizarLivros() {
        numeroLibros.setText(String.valueOf(B.quantidadeLivros()));
        vaciarTablaLibros();
        for (int i = 0; i < B.quantidadeLivros(); i++) {
            Livro lib = B.livro(i);
            Object[] fila = {lib.getIdLivro(), lib.getTituloLivro(), lib.getAutorLivro(), (lib.disponibilidade()) ? "Disponivel" : "Ocupado"};
            ((DefaultTableModel) tablaLibros.getModel()).addRow(fila);
        }
    }

    private void atualizarUsuarios() {
        numeroUsuarios.setText(String.valueOf(B.numeroUsuarios()));
        vazioTablaUsuarios();
        for (int i = 0; i < B.numeroUsuarios(); i++) {
            Usuario user = B.usuario(i);
            Object[] fila = {user.getCodigo(), user.getNome(), user.getDataDeNascimento(), (user.temLivro()) ? user.getLib().getTituloLivro() : "Não tem Livro"};
            ((DefaultTableModel) tablaUsuarios.getModel()).addRow(fila);
        }
    }

    private void vaciarTablaLibros() {
        DefaultTableModel model = (DefaultTableModel) tablaLibros.getModel();
        int numrows = model.getRowCount();
        for (int i = numrows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }

    private void vazioTablaUsuarios() {
        DefaultTableModel model = (DefaultTableModel) tablaUsuarios.getModel();
        int numrows = model.getRowCount();
        for (int i = numrows - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }

    private void enviarFichero() {
        try {
            File fichero = new File("fichero");
            if (!fichero.exists()) {
                B = new Biblioteca();
                System.out.println("Você criou um novo arquivo");
            } else {
                ObjectInputStream ois = new ObjectInputStream(new FileInputStream("fichero"));
                B = (Biblioteca) ois.readObject();
                ois.close();
                System.out.println("Ele foi enviado com sucesso arquivo");
            }
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        } catch (ClassNotFoundException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    private void guardarFichero() {
        try {
            ObjectOutputStream ous = new ObjectOutputStream(new FileOutputStream("fichero"));
            ous.writeObject(B);
            ous.close();
            System.out.println("O arquivo foi salvo com sucesso");
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField numeroLibros;
    private javax.swing.JTextField numeroLibros1;
    private javax.swing.JTextField numeroLibros2;
    private javax.swing.JTextField numeroLibros3;
    private javax.swing.JTextField numeroLibros4;
    private javax.swing.JTextField numeroUsuarios;
    private javax.swing.JButton ordenarAutor;
    private javax.swing.JButton ordenarCodigo;
    private javax.swing.JButton ordenarTitulo;
    private javax.swing.JTable tablaLibros;
    private javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables
}
